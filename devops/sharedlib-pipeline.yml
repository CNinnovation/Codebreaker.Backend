# Build and publish Codebreaker shared library to Azure Artifacts

trigger:
  branches:
    include:
    - main
  paths:  
    include:
    - src/shared/CodeBreaker.Shared

variables:
  buildConfiguration: 'Release'
  projectDirectory: 'src/shared/CodeBreaker.Shared'
  projectFile: 'src/shared/CodeBreaker.Shared/CodeBreaker.Shared.csproj'
  lib-version: 2.0-beta.1$(Build.BuildNumber)

stages:
  - stage: 'BuildAndPackage'
    displayName: 'Build and package the library'
    jobs:
    - job: BuildAndPackageJob
      displayName: 'Build and Package'
      pool:
        vmImage: ubuntu-latest
      
      variables:
        packageDirectory: $(Build.ArtifactStagingDirectory)
        
      steps:
      - script: |
          echo '$(lib-version)'
          dotnet build --configuration $(buildConfiguration) $(projectFile)
        displayName: 'dotnet build $(buildConfiguration)'

      - script: dotnet pack -c $(buildConfiguration) $(projectFile) /p:Version=$(lib-version) -o $(packageDirectory)
        displayName: 'dotnet pack'

      - publish: $(packageDirectory)
        artifact: drop
        displayName: 'Publish shared library'

  - stage: 'NuGet'
    displayName: 'Publish to Azure Artifacts'
    dependsOn: BuildAndPackage
    jobs:
    - job: PublishNuGetJob
      displayName: 'Publish NuGet Package to Azure Artifacts'
      pool:
        vmImage: ubuntu-latest
      variables:
        feedpath: "https://pkgs.dev.azure.com/cnilearn/YamlPipelines/_packaging/yamlpipelinesfeed/nuget/v3/index.json"
        apikey: "testkey"

      steps:
        - download: current
          artifact: drop
          displayName: 'Download pipeline artifact'
        
        - task: NuGetAuthenticate@0
          displayName: 'Authenticate with Project Artifacts Feed'

        - script: | 
            dotnet nuget push "$(Pipeline.Workspace)/drop/*.nupkg" --source $(feedpath) --api-key $(apikey)
          displayName: "push to feed"
