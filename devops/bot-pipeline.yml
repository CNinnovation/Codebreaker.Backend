# Build and publish Codebreaker Bot to Azure AppService

trigger:
 branches:
   include:
     - main
 paths:
   include:
   - src/services/bot/CodeBreaker.Bot/*
   - src/services/bot/CodeBreaker.Bot.Tests/*

variables:
  buildConfiguration: 'Release'
  projectFile: 'src/services/bot/CodeBreaker.Bot/CodeBreaker.Bot.csproj'
  testProjectFile: 'src/services/bot/CodeBreaker.Bot.Tests/CodeBreaker.Bot.Tests.csproj'

stages:
  - stage: 'Build'
    displayName: 'Build the Bot'
    jobs:
    - job: BuildAndPublishJob
      displayName: 'Build Bot'
    
      pool:
        vmImage: ubuntu-latest
    
      variables:
        outputDirectory: $(Build.ArtifactStagingDirectory)
    
      steps:
      - script: |
          dotnet test $(testProjectFile)
          dotnet build -c $(buildConfiguration) $(projectFile)
        displayName: 'dotnet build'
     
      - task: DotNetCoreCLI@2
        inputs:
          command: publish
          publishWebProjects: False
          arguments: '--configuration $(buildConfiguration) --output $(outputDirectory)'
          zipAfterPublish: True
      
      - publish: $(outputDirectory)
        artifact: drop
        displayName: 'publish to artifact pipeline'

  - stage: 'DeployStaging'
    displayName: 'Deploy to Azure AppService'
    dependsOn: 'Build'

    jobs:
    - job: DeployStagingJob
      displayName: 'Deploy to Azure AppService'

      pool:
        vmImage: ubuntu-latest

      steps:
        - download: current
          artifact: drop
          displayName: 'Download pipeline artifact'
          
        - script: ls -al '$(Pipeline.Workspace)/drop'
          displayName: ls -al '$(Pipeline.Workspace)/drop'
        
        - task: AzureRmWebAppDeployment@4
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'azuremvpconnection'
            appType: 'webAppLinux'
            WebAppName: 'codebreaker-bot'
            deployToSlotOrASE: true
            ResourceGroupName: 'codebreaker'
            SlotName: 'staging'
            packageForLinux: '$(Pipeline.Workspace)/drop/*.zip'
            RuntimeStack: 'DOTNETCORE|7.0'
